{{template "base" .}}
{{define "title"}}
Virtual terminal
{{end}}

{{define "content"}}
<h2 class="mt-3 text-center">Virtual terminal</h2>
<hr>
<div class="alert alert-danger text-center d-none" id="card-messages"> </div>

<form action="/payment-succeeded" method="post"
    name="charge-form" id="charge-form"
    class="d-block need-validation charge-form"
    autocomplete="off" novalidate="">

    <div class="mb-3">
        <label for="amount" class="form-label">Amount</label>
        <input type="text" class="form-control" id="amount" name="amount"
            required="" autocomplete="amount-new">
    </div>
        <div class="mb-3">
            <label for="cardholder_name" class="form-label">Cardholder Name</label>
            <input type="text" class="form-control" id="cardholder_name" name="cardholder_name"
                required="" autocomplete="cardholder_name-new">
        </div>
        <div class="mb-3">
            <label for="cardholder_email" class="form-label">Cardholder Email</label>
            <input type="text" class="form-control" id="cardholder_email" name="cardholder_email"
                required="" autocomplete="cardholder_email-new">
        </div>
        <div class="mb-3">
            <label for="card-element" class="form-label">Credit Card</label>
            <div id="card-element" class="form-control"></div>
            <div class="alert-danger text-center" id="card-errors" role="alert"></div>
            <div class="alert-success text-center" id="card-success" role="alert"></div>
        </div>
        <hr>
        <a id="pay-button" href="javascript:void(0)" class="btn btn-primary" onclick="val()">Charge Card</a>
        <div id="process-payment" class="text-center d-none">
            <div class="spinner-border text-primary" role="status">
                <span class="visally-hidden"></span>
            </div>
        </div>
        <input type="hidden" name="payment_intent" id="payment_intent">
        <input type="hidden" name="payment_method" id="payment_method">
        <input type="hidden" name="payment_amount" id="payment_amount">
        <input type="hidden" name="payment_currency" id="payment_currency">
</form>
{{end}}

{{define "js"}}
    <script src="https://js.stripe.com/v3/"><script>
    <script>console.log("hello base");</script>
    <script>
    console.log("hello");
    let card;
    let stripe;
    const cardMessages = document.getElementById("card-messages")
    const payButton = document.getElementById("pay-button")
    const processing = document.getElementById("process-payment")

    stripe = Stripe("{{index .StringMap "public_key"}}");

    function hidePayButton() {
        payButton.classList.add("d-none");
        processing.classList.remove("d-none");
    };

    function showPayButtons() {
        payButton.classList.remove("d-none");
        processing.classList.add("d-none");
    };

    function showCardError(msg) {
        cardMessages.classList.add("alert-danger");
        cardMessages.classList.remove("alert-success");
        cardMessages.classList.remove("d-none");
        cardMessages.innerText = msg;
    };

    function showCardSuccess(msg) {
        cardMessages.classList.add("alert-success");
        cardMessages.classList.remove("alert-danger");
        cardMessages.classList.remove("d-none");
        cardMessages.innerText = "Transaction successful";
    };


    function val() {
        let form = document.getElementById("charge-form");
        if (form.checkValidity() === false) {
            this.event.preventDefault();
            this.event.stopPropagation();
            form.classList.add("was-validated");
            return;
        }
        form.classList.add("was-validated");
        hidePayButton();

        let amountToCharge = String(parseFloat(document.getElementById("amount").value) * 100)

        let payload = {
            amount: amountToCharge,
            currency: 'cad'
        }

        const requestOptions = {
            method: 'post',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(payload)
        }
        fetch("{{.API}}/api/v1/payment-intent", requestOptions)
            .then(response => response.text())
            .then(response => {
                let data;
                try {
                    data = JSON.parse(response);
                    stripe.confirmCardPayment(
                        data.client_secret,{
                        payment_method: {
                            card: card,
                            billing_details: {
                                name: document.getElementById("cardholder_name").value
                            },
                        },
                    }).then(function(result) {
                        if (result.error) {
                            showCardError(result.error.message);
                            showPayButtons();
                        } else if (result.paymentIntent) {
                            if (result.paymentIntent.status === "succeeded") {
                                document.getElementById("payment_method").value = result.paymentIntent.payment_method_types[0]
                                document.getElementById("payment_intent").value = result.paymentIntent.id
                                document.getElementById("payment_amount").value = result.paymentIntent.amount
                                document.getElementById("payment_currency").value = result.paymentIntent.currency
                                processing.classList.add("d-none");
                                showCardSuccess();
                                document.getElementById("charge-form").submit();

                            }
                        }
                    })
                } catch (err) {
                    console.log(err);
                    showCardError("Invalid response from payment gateway!");
                    showPayButtons();

                };

            })
    };
    (function(){
        const elements = stripe.elements();
        const style = {
            base: {
                fontSize: '16px',
                lineHeight: '24px'
            }
        };
        card = elements.create('card', {
            style:style,
            hidPostalCode: true,
        });
        card.mount("#card-element");

        card.addEventListener('change', function(event) {
            var displayError = document.getElementById("card-errors");
            if (event.error) {
            displayError.classList.remove('d-none');
            } else {
                displayError.classList.add('d-none');
                displayError.textContent = '';
            }
        });
    })();
    </script>
{{end}}